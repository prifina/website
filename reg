<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Create Account</title>
<script src="https://cdn.tailwindcss.com/3.4.16"></script>
<script>tailwind.config={theme:{extend:{colors:{primary:'#4f46e5',secondary:'#6b7280'},borderRadius:{'none':'0px','sm':'4px',DEFAULT:'8px','md':'12px','lg':'16px','xl':'20px','2xl':'24px','3xl':'32px','full':'9999px','button':'8px'}}}}</script>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/4.6.0/remixicon.min.css">
<style>
:where([class^="ri-"])::before { content: "\f3c2"; }
body {
font-family: 'Inter', sans-serif;
background-color: #f9fafb;
}
.form-container {
max-width: 560px;
margin: 0 auto;
box-shadow: 0 4px 24px rgba(0, 0, 0, 0.05);
}
.otp-input {
width: 3rem;
height: 3rem;
font-size: 1.5rem;
text-align: center;
border: 1px solid #e5e7eb;
border-radius: 8px;
background-color: white;
transition: all 0.2s;
}
.otp-input:focus {
border-color: #4f46e5;
box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.2);
outline: none;
}
.otp-input.error {
border-color: #ef4444;
}
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
-webkit-appearance: none;
margin: 0;
}
input[type=number] {
-moz-appearance: textfield;
}
</style>
</head>
<body class="min-h-screen flex items-center justify-center py-16 px-4 sm:px-6 lg:px-8 bg-gray-50">
<div class="form-container bg-white shadow-lg rounded-xl p-12 w-full">
<!-- Registration Form (Step 1) -->
<div id="registration-form" class="space-y-8">
<div class="text-center">
<h1 class="font-['Pacifico'] text-4xl text-primary">logo</h1>
<h2 class="mt-8 text-3xl font-bold text-gray-900">Create Account</h2>
<p class="mt-3 text-base text-gray-600">Fill in your details to get started</p>
</div>
<div class="flex items-center justify-center">
<div class="flex items-center">
<div class="flex items-center justify-center w-8 h-8 bg-primary text-white rounded-full">1</div>
<div class="ml-2 text-sm font-medium text-primary">Registration</div>
</div>
<div class="w-12 h-1 mx-2 bg-gray-200"></div>
<div class="flex items-center">
<div class="flex items-center justify-center w-8 h-8 bg-gray-200 text-gray-500 rounded-full">2</div>
<div class="ml-2 text-sm font-medium text-gray-500">Verification</div>
</div>
</div>
<form id="signup-form" class="space-y-6">
<div>
<label for="firstName" class="block text-sm font-medium text-gray-700 mb-1">First Name</label>
<div class="relative">
<input type="text" id="firstName" name="firstName" class="w-full px-5 py-4 text-base border border-gray-300 rounded-lg focus:ring-primary focus:border-primary" placeholder="Enter your first name" required>
<div class="error-message text-red-500 text-xs mt-1 hidden"></div>
</div>
</div>
<div>
<label for="lastName" class="block text-sm font-medium text-gray-700 mb-1">Last Name</label>
<div class="relative">
<input type="text" id="lastName" name="lastName" class="w-full px-4 py-3 border border-gray-300 rounded focus:ring-primary focus:border-primary" placeholder="Enter your last name" required>
<div class="error-message text-red-500 text-xs mt-1 hidden"></div>
</div>
</div>
<div>
<label for="email" class="block text-sm font-medium text-gray-700 mb-1">Email Address</label>
<div class="relative">
<input type="email" id="email" name="email" class="w-full px-4 py-3 border border-gray-300 rounded focus:ring-primary focus:border-primary" placeholder="you@example.com" required>
<div class="error-message text-red-500 text-xs mt-1 hidden"></div>
</div>
</div>
<div>
<button type="submit" id="continue-btn" class="w-full flex justify-center items-center py-3 px-4 border border-transparent text-base font-medium rounded-button text-white bg-primary hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary whitespace-nowrap">
<span>Continue</span>
<div class="hidden ml-2 w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin" id="spinner"></div>
</button>
</div>
<div class="text-center text-sm">
<p class="text-gray-600">
Already have an account?
<a href="#" class="font-medium text-primary hover:text-primary/80">Sign in</a>
</p>
</div>
</form>
</div>
<!-- OTP Verification (Step 2) -->
<div id="verification-form" class="space-y-8 hidden">
<div class="text-center">
<h1 class="font-['Pacifico'] text-3xl text-primary">logo</h1>
<h2 class="mt-6 text-2xl font-bold text-gray-900">Verify Your Email</h2>
<p class="mt-2 text-sm text-gray-600">We sent a verification code to <span id="user-email" class="font-medium"></span></p>
</div>
<div class="flex items-center justify-center">
<div class="flex items-center">
<div class="flex items-center justify-center w-8 h-8 bg-primary text-white rounded-full">âœ“</div>
<div class="ml-2 text-sm font-medium text-primary">Registration</div>
</div>
<div class="w-12 h-1 mx-2 bg-primary"></div>
<div class="flex items-center">
<div class="flex items-center justify-center w-8 h-8 bg-primary text-white rounded-full">2</div>
<div class="ml-2 text-sm font-medium text-primary">Verification</div>
</div>
</div>
<form id="otp-form" class="space-y-6">
<div>
<label class="block text-sm font-medium text-gray-700 mb-4 text-center">Enter 6-digit verification code</label>
<div class="flex justify-center gap-2">
<input type="number" class="otp-input" maxlength="1" data-index="0" required>
<input type="number" class="otp-input" maxlength="1" data-index="1" required>
<input type="number" class="otp-input" maxlength="1" data-index="2" required>
<input type="number" class="otp-input" maxlength="1" data-index="3" required>
<input type="number" class="otp-input" maxlength="1" data-index="4" required>
<input type="number" class="otp-input" maxlength="1" data-index="5" required>
</div>
<div id="otp-error" class="text-red-500 text-xs mt-2 text-center hidden">Invalid verification code. Please try again.</div>
</div>
<div>
<button type="submit" id="verify-btn" class="w-full flex justify-center items-center py-3 px-4 border border-transparent text-base font-medium rounded-button text-white bg-primary hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary whitespace-nowrap">
<span>Verify</span>
<div class="hidden ml-2 w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin" id="verify-spinner"></div>
</button>
</div>
<div class="flex flex-col items-center space-y-4">
<div class="text-sm text-gray-600">
Didn't receive the code? <span id="timer" class="font-medium">00:30</span>
</div>
<button type="button" id="resend-btn" class="text-primary font-medium text-sm disabled:text-gray-400" disabled>Resend Code</button>
<button type="button" id="back-btn" class="text-gray-600 font-medium text-sm flex items-center">
<span class="w-5 h-5 flex items-center justify-center mr-1"><i class="ri-arrow-left-line"></i></span>
Back to registration
</button>
</div>
</form>
</div>
<!-- Success Message (Step 3) -->
<div id="success-message" class="space-y-8 hidden">
<div class="text-center">
<div class="mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-green-100 mb-6">
<span class="w-10 h-10 flex items-center justify-center text-green-500">
<i class="ri-check-line ri-2x"></i>
</span>
</div>
<h2 class="text-2xl font-bold text-gray-900">Account Created Successfully!</h2>
<p class="mt-2 text-sm text-gray-600">Your account has been successfully created and verified.</p>
</div>
<div>
<button type="button" class="w-full flex justify-center py-3 px-4 border border-transparent text-base font-medium rounded-button text-white bg-primary hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary whitespace-nowrap">
Continue to Dashboard
</button>
</div>
</div>
</div>
<script>
document.addEventListener('DOMContentLoaded', function() {
// Form elements
const registrationForm = document.getElementById('registration-form');
const verificationForm = document.getElementById('verification-form');
const successMessage = document.getElementById('success-message');
const signupForm = document.getElementById('signup-form');
const otpForm = document.getElementById('otp-form');
const continueBtn = document.getElementById('continue-btn');
const spinner = document.getElementById('spinner');
const verifyBtn = document.getElementById('verify-btn');
const verifySpinner = document.getElementById('verify-spinner');
const userEmailSpan = document.getElementById('user-email');
const backBtn = document.getElementById('back-btn');
const resendBtn = document.getElementById('resend-btn');
const timerSpan = document.getElementById('timer');
const otpInputs = document.querySelectorAll('.otp-input');
const otpError = document.getElementById('otp-error');
// Form validation
signupForm.addEventListener('submit', function(e) {
e.preventDefault();
// Show loading state
continueBtn.querySelector('span').textContent = 'Processing...';
spinner.classList.remove('hidden');
// Get form data
const firstName = document.getElementById('firstName').value;
const lastName = document.getElementById('lastName').value;
const email = document.getElementById('email').value;
// Validate email format
if (!validateEmail(email)) {
document.getElementById('email').nextElementSibling.textContent = 'Please enter a valid email address';
document.getElementById('email').nextElementSibling.classList.remove('hidden');
continueBtn.querySelector('span').textContent = 'Continue';
spinner.classList.add('hidden');
return;
}
// Simulate API call to send OTP (2 seconds delay)
setTimeout(function() {
// Hide loading state
continueBtn.querySelector('span').textContent = 'Continue';
spinner.classList.add('hidden');
// Update user email in verification form
userEmailSpan.textContent = email;
// Show verification form
registrationForm.classList.add('hidden');
verificationForm.classList.remove('hidden');
// Focus on first OTP input
otpInputs[0].focus();
// Start countdown timer
startTimer(30);
}, 2000);
});
// OTP input handling
otpInputs.forEach(input => {
// Allow only numbers
input.addEventListener('input', function(e) {
this.value = this.value.replace(/[^0-9]/g, '');
if (this.value.length > 1) {
this.value = this.value.slice(0, 1);
}
// Auto-advance to next input
const index = parseInt(this.dataset.index);
if (this.value && index < otpInputs.length - 1) {
otpInputs[index + 1].focus();
}
// Check if all inputs are filled
checkAllOtpFilled();
});
// Handle backspace
input.addEventListener('keydown', function(e) {
const index = parseInt(this.dataset.index);
if (e.key === 'Backspace' && !this.value && index > 0) {
otpInputs[index - 1].focus();
}
});
});
// Handle paste event for OTP
otpInputs[0].addEventListener('paste', function(e) {
e.preventDefault();
const pasteData = e.clipboardData.getData('text');
const digits = pasteData.replace(/[^0-9]/g, '').split('').slice(0, 6);
digits.forEach((digit, index) => {
if (index < otpInputs.length) {
otpInputs[index].value = digit;
}
});
if (digits.length === 6) {
otpInputs[5].focus();
checkAllOtpFilled();
}
});
// OTP form submission
otpForm.addEventListener('submit', function(e) {
e.preventDefault();
// Get OTP value
let otp = '';
otpInputs.forEach(input => {
otp += input.value;
});
// Validate OTP (must be 6 digits)
if (otp.length !== 6) {
otpError.classList.remove('hidden');
return;
}
// Show loading state
verifyBtn.querySelector('span').textContent = 'Verifying...';
verifySpinner.classList.remove('hidden');
// Simulate API verification (2 seconds delay)
setTimeout(function() {
// Hide loading state
verifyBtn.querySelector('span').textContent = 'Verify';
verifySpinner.classList.add('hidden');
// For demo purposes, let's assume 123456 is the correct OTP
if (otp === '123456') {
// Show success message
verificationForm.classList.add('hidden');
successMessage.classList.remove('hidden');
} else {
// Show error message
otpError.classList.remove('hidden');
otpInputs.forEach(input => {
input.classList.add('error');
});
}
}, 2000);
});
// Back button
backBtn.addEventListener('click', function() {
verificationForm.classList.add('hidden');
registrationForm.classList.remove('hidden');
});
// Resend button
resendBtn.addEventListener('click', function() {
if (!resendBtn.disabled) {
// Show message
otpError.textContent = 'A new verification code has been sent to your email.';
otpError.classList.remove('hidden');
otpError.classList.remove('text-red-500');
otpError.classList.add('text-green-500');
// Clear OTP inputs
otpInputs.forEach(input => {
input.value = '';
input.classList.remove('error');
});
// Focus on first input
otpInputs[0].focus();
// Disable resend button and start timer
resendBtn.disabled = true;
startTimer(30);
}
});
// Helper functions
function validateEmail(email) {
const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
return re.test(String(email).toLowerCase());
}
function startTimer(seconds) {
let timeLeft = seconds;
// Update timer text
function updateTimer() {
const minutes = Math.floor(timeLeft / 60);
const seconds = timeLeft % 60;
timerSpan.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
}
// Initial update
updateTimer();
// Start countdown
const timerInterval = setInterval(function() {
timeLeft--;
updateTimer();
if (timeLeft <= 0) {
clearInterval(timerInterval);
resendBtn.disabled = false;
timerSpan.textContent = '';
}
}, 1000);
}
function checkAllOtpFilled() {
let allFilled = true;
otpInputs.forEach(input => {
if (!input.value) {
allFilled = false;
}
});
if (allFilled) {
// Hide error message if previously shown
otpError.classList.add('hidden');
otpInputs.forEach(input => {
input.classList.remove('error');
});
}
}
});
</script>
</body>
</html>
